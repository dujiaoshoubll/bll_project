
1.webpack唯一的功能：打包
2.loader:处理除了js文件之外的其他类型文件

webpack.config.js
mudule.exports={
  mode:'none'(只做打包),'production'（能压缩多少就压缩多少）,'development'（保留一部分原始文件）,
  entry: '入口' || {'name1':'url1','name2':'url2'}，
  output: {
    path,
    filename
  }
};


----------------------------------------------------------------------
单入口、多入口
 entry: '入口' || {'name1':'url1','name2':'url2'}
 
---------------------------------------------------------------------
loader--帮助webpack处理js以外的文件

----------------------------------------------------------------------
css loader

下载
npm i stype-loader css-loader

例：
const path = require('path');
webpack.config.js文件
module.exports = {
  mode: 'development',
  entry: './src/js/1.js',
  output: {
    path:path.resove(_dirname, 'build'),
    filename: 'bundle.min.js'
  },
  module: {
    rules: {
      test:/\.css$/, use:['style-loader', 'css-loader','postcss-loader']
    }
  }
};

----------------------------------------------------------------------
对样式处理：加前缀
postcss-loader  ：帮助webpack加载css,并解析里面的样式
autoprefixer  :根据浏览器兼容表选择添加样式兼容前缀(默认大于5%的用户，可以修改配置)

---------------------------------------------------------------------
插件
postcss.config.js文件
module.exports={
  plugins:[
    require('autoprefixer');
  ]
}
---------------------------------------------------------------------
file-loader 读取并且输出文件

module: {
    rules: {
      test:/\.(jpg|png|gif)$/i, use:{
        loader: 'file-loader',
        options: {
          outputPath: 'images/'
        }
      }
    }
  }

-----------------------------------------------------------------------
url-loader  读取并且输出base64
下载 cnpm i url-loader -D
module: {
    rules: {
      test:/\.(jpg|png|gif)$/i, use:{
        loader: 'url-loader',
        options: {
          outputPath: 'images/',
          limit:1024
        }
      }
    }
  }
  
  -----------------------------------------------------------------------
  less-loader
  下载 cnpm i less-loader -D
  
  module: {
    rules: {
      test:/\.less$/i, use:['style-loader', 'css-loader', 'less-loader']
    }
  }
